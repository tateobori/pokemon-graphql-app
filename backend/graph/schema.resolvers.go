package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.33

import (
	"context"
	"fmt"
	"pokemon-graphql/entity"
	"pokemon-graphql/graph/model"
)

// GetPokemon is the resolver for the getPokemon field.
func (r *queryResolver) GetPokemon(ctx context.Context, name string) (*model.Pokemon, error) {
	pokemon := entity.Pokemon{Name: name}
	r.DB.Where("name = ?", name).First(&pokemon)
	return &model.Pokemon{
		ID:     fmt.Sprint(pokemon.ID),
		PokeID: int(pokemon.PokemonId),
		Name:   pokemon.Name,
		BaseStats: &model.BaseStats{
			Total:     int(pokemon.Total),
			Hp:        int(pokemon.Hp),
			Attack:    int(pokemon.Attack),
			Defence:   int(pokemon.Defence),
			SpAttack:  int(pokemon.SpAttack),
			SpDefence: int(pokemon.SpDefence),
			Speed:     int(pokemon.Speed),
		},
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
